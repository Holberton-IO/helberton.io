{"version":3,"file":"app.js","mappings":"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","sources":["webpack:///./src/controls.js","webpack:///./src/extensions/arraysExtensions.js","webpack:///./src/gameEngine.js","webpack:///./src/gameObjects.js","webpack:///./src/globals.js","webpack:///./src/network/client.js","webpack:///./src/network/packet.js","webpack:///./src/network/packets/direction.js","webpack:///./src/network/packets/fillArea.js","webpack:///./src/network/packets/namePacket.js","webpack:///./src/network/packets/packets.js","webpack:///./src/network/packets/ping.js","webpack:///./src/network/packets/playerRemoved.js","webpack:///./src/network/packets/playerState.js","webpack:///./src/network/packets/pong.js","webpack:///./src/network/packets/ready.js","webpack:///./src/network/packets/requestWaitingBlocks.js","webpack:///./src/network/packets/stopDrawingWaitingBlocks.js","webpack:///./src/network/packets/waitingBlocks.js","webpack:///./src/network/socket.js","webpack:///./src/network/utils/bytesUtils.js","webpack:///./src/network/utils/reader.js","webpack:///./src/network/utils/writer.js","webpack:///./src/ui/objects/block.js","webpack:///./src/ui/objects/camera.js","webpack:///./src/ui/objects/player.js","webpack:///./src/ui/objects/point.js","webpack:///./src/ui/objects/rectangle.js","webpack:///./src/ui/utils.js","webpack:///./src/utils/math.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/app.js"],"sourcesContent":["const keyMapper = { //In Circle Way\n    ArrowUp: 1,\n    ArrowDown: 3,\n    ArrowLeft: 4,\n    ArrowRight: 2,\n}\n\nwindow.onkeyup = (e) => {\n    //console.log(keyMapper[e.key]);\n    const keyVal = keyMapper[e.key];\n    if(keyVal && window.client && window.client.player){\n        window.client.player.requestChangeDir(keyVal);\n    }\n};\n","Object.defineProperty(Array.prototype, 'getLast', {\n    get: function() {\n        if (this.length === 0) {\n            throw new Error(\"No elements in array\");\n        }\n        return this[this.length - 1];\n    }\n});\n\n\nObject.defineProperty(Array.prototype, 'first', {\n    get: function() {\n        if (this.length === 0) {\n            throw new Error(\"No elements in array\");\n        }\n        return this[0];\n    }\n});\n","import * as GameMath from './utils/math.js';\nimport * as GameUtils from './ui/utils.js';\nimport {calculate_pixel_ratio} from \"./ui/utils.js\";\nimport GameObjects from \"./gameObjects.js\"\nimport PingPacket from \"./network/packets/ping\";\n\n\nclass GameEngine {\n    constructor(fps) {\n        this.lastFrameTimeStamp = 0\n        this.currentFrameTimeStamp = 0\n        this.totalDeltaTimeCap = 0\n        this.fps = fps\n        this.deltaTime = 1000 / this.fps;\n        this.interpoatedDeltaTime = 1000 / this.fps;\n\n\n        this.timesCap = [0, 6.5, 16, 33, 49, 99];\n        this.currentCapIndex = 0;\n\n        this.processFrames = [];\n        this.missedFrames = [];\n\n\n        this.canvanQaulity = 1;\n\n\n        this.gameObjects = new GameObjects();\n\n        this.drawFunction = () => {\n        };\n    }\n\n    setDrawFunction(drawFunction) {\n        this.drawFunction = drawFunction;\n    }\n\n\n    getCap(cap) {\n        return this.timesCap[GameMath.clamp(cap, 0, this.timesCap.length - 1)];\n    }\n\n    checkIncreasingInFramesProcess() {\n        // This function checks if the game is running at the right speed.\n        // If the game is running too fast, it will decrease the currentCapIndex.\n        // if currentFrameTimeStamp < 90% of the currentCapIndex, then decrease the currentCapIndex.\n        if (this.currentFrameTimeStamp < GameMath.linearInterpolate(\n            this.getCap(this.currentCapIndex), this.getCap(this.currentCapIndex - 1),\n            0.9\n        )) {\n            this.processFrames.push(Date.now());\n\n            // If Draw More than 190 frames in 10 seconds, then remove the first frame.\n            while (this.processFrames.length > 190) {\n                if (Date.now() - this.processFrames[0] > 10_000) {\n                    this.processFrames.splice(0, 1)\n                } else {\n                    // if first frame happen in less than 10 seconds, decrease the currentCapIndex.\n                    this.currentCapIndex--;\n                    this.processFrames = [];\n                    this.currentCapIndex = GameMath.clamp(this.currentCapIndex, 0, this.timesCap.length - 1);\n                }\n            }\n        }\n    }\n\n    checkDecreaseInFramesProcess() {\n        // This function checks if the game is running at the right speed.\n        // If the game is running too slow, it will increase the currentCapIndex.\n        // if currentFrameTimeStamp > 5% of the currentCapIndex, then increase the currentCapIndex.\n        if (this.currentFrameTimeStamp > GameMath.linearInterpolate(\n            this.getCap(this.currentCapIndex), this.getCap(this.currentCapIndex + 1),\n            0.05\n        )) {\n            this.missedFrames.push(Date.now());\n            this.processFrames = [];\n            // If Draw Less than 5 frames in 5 seconds, then remove the first frame.\n            while (this.missedFrames.length > 5) {\n                if (Date.now() - this.missedFrames[0] > 5_000) {\n                    this.missedFrames.splice(0, 1)\n                } else {\n                    // if first frame happen in less than 5 seconds, increase the currentCapIndex.\n                    this.currentCapIndex++;\n                    this.missedFrames = [];\n                    this.currentCapIndex = GameMath.clamp(this.currentCapIndex, 0, this.timesCap.length - 1);\n                }\n            }\n        }\n    }\n\n\n    handleServerTiming(timeStamp) {\n        if (!window.client || !window.client.player)\n            return;\n        const myPlayer = window.client.player;\n        const maxWaitTimeForDisconnect = window.game.maxWaitingSocketTime;\n        const clientSideSetPosPassedTime = Date.now() - myPlayer.lastMyPostSetClientSendTime;\n        const lastConfirmationPassedTime = Date.now() - myPlayer.lastConfirmedTimeForPos;\n        const serverSideSetPosPassed = Date.now() - myPlayer.lastPosServerSentTime;\n\n        const timeTookToConfirmation = serverSideSetPosPassed - clientSideSetPosPassedTime;\n\n        // console.log(`Last Confirmation Passed Time: ${lastConfirmationPassedTime}ms`);\n        // console.log(`Time Took To Confirmation: ${timeTookToConfirmation}ms`);\n        if (lastConfirmationPassedTime > maxWaitTimeForDisconnect &&\n            timeTookToConfirmation > maxWaitTimeForDisconnect) {\n            console.log(\"Check Your Internet Connection\");\n\n        }else {\n\n        }\n\n        const maxPingTime = myPlayer.waitingForPing ? 1_0000: 5_000;\n        const pingPassedTime = Date.now() - myPlayer.lastPingTime;\n        if(pingPassedTime > maxPingTime) {\n            myPlayer.waitingForPing = true;\n            myPlayer.lastPingTime = Date.now();\n            const pingPacket = new PingPacket();\n            window.client.send(pingPacket);\n        }\n\n\n\n    }\n\n    loop(timeStamp) {\n        window.game.timeStamp = timeStamp;\n        this.currentFrameTimeStamp = timeStamp - this.lastFrameTimeStamp; // 16\n\n        if(this.currentFrameTimeStamp > this.interpoatedDeltaTime){\n            this.interpoatedDeltaTime = this.currentFrameTimeStamp;\n        }else\n        {\n            this.interpoatedDeltaTime = GameMath.linearInterpolate(this.interpoatedDeltaTime, this.currentFrameTimeStamp, 0.05);\n        }\n\n\n\n        this.checkIncreasingInFramesProcess();\n        this.checkDecreaseInFramesProcess();\n        this.deltaTime = this.currentFrameTimeStamp + this.totalDeltaTimeCap;\n        // console.log(this.deltaTime, this.gameObjects.blocks.length);\n        this.lastFrameTimeStamp = timeStamp;\n        if (this.deltaTime < this.getCap(this.currentCapIndex)) {\n            this.totalDeltaTimeCap += this.currentFrameTimeStamp;\n\n        } else {\n            this.totalDeltaTimeCap = 0;\n            this.drawFunction();\n        }\n\n\n        this.handleServerTiming(timeStamp);\n        window.requestAnimationFrame(this.loop.bind(this));\n    }\n\n\n    camTransform(ctx, changeSize = false) {\n        if (changeSize) {\n            this.scaleCanvas(ctx);\n        }\n\n        ctx.save();\n        const camera = window.camera;\n        camera.calZoom(ctx);\n\n\n    }\n\n    scaleCanvas(ctx, w = GameUtils.getWidth(),\n                h = GameUtils.getHeight()) {\n\n        let MAX_PIXEL_RATIO = calculate_pixel_ratio();\n        let drawingQuality = 1;\n        let c = ctx.canvas;\n        c.width = w * drawingQuality * MAX_PIXEL_RATIO;\n        c.height = h * drawingQuality * MAX_PIXEL_RATIO;\n        let styleRatio = 1;\n        c.style.width = w * styleRatio + \"px\";\n        c.style.height = h * styleRatio + \"px\";\n    }\n\n}\n\n\nexport default GameEngine;","import Block from './ui/objects/block.js';\n\nclass GameObjects {\n    constructor() {\n        this.players = {};\n        this.blocks = [];\n        this.myPlayer = null;\n        this.mapSize = 0;\n    }\n\n\n\n    addPlayer(player) {\n        console.log(this.players);\n        console.log(player);\n        console.log(\"On Add Player\");\n\n        if (player.id in this.players)\n            return this.players[player.id];\n\n        if (player.isMyPlayer)\n            this.myPlayer = player;\n        else\n            player.isReady = true;\n\n        this.players[player.id] = player;\n        return player;\n    }\n\n\n    removePlayer(player) {\n        if (player.id in this.players)\n            delete this.players[player.id];\n    }\n\n    addBlock(block) {\n        return Block.getBlockAt(block.position, this.blocks);\n    }\n\n\n}\n\nexport default GameObjects;","import Point from \"./ui/objects/point.js\";\n\nconst globals = {\n    timeStamp: 0,\n    gameSpeed: 0.006,\n    viewPortRadius: 30,\n    maxZoom: 430,\n    maxBlocksNumber: 2500, //1100 50 * 50\n    usernameLength: 6,\n    maxWaitingSocketTime: 1_000,\n    drawingOffset: 10,\n    calDrawingOffset: (p) => {\n        return new Point(p.x * globals.drawingOffset, p.y * globals.drawingOffset);\n    },\n    calBlocksGap: (p, size) => {\n        return new Point(p.x * size, p.y * size);\n    }\n};\n\n\n\n\nwindow.game = {};\n// Adding to window object\nObject.entries(globals).forEach(([key, value]) => {\n    window.game[key] = value;\n});\n","import Socket from \"./socket.js\"\nimport Reader from \"./utils/reader.js\"\nimport PacketsDictionary from \"./packets/packets\";\nimport NamePacket from \"./packets/namePacket.js\";\n\nconst ConnectionStatus = {\n    CONNECTING: 0,\n    OPEN: 1,\n    CLOSING: 2,\n    CLOSED: 3\n};\n\nconst PlayerStatus = {\n    WAITING: -1,\n    CONNECTED: 0,\n    READY: 1,\n    PLAYING: 2,\n    DISCONNECTED: 3\n};\n\n\n\n\n\nclass Client {\n    constructor(server,onConnect, ) {\n        window.client = this;\n        this.server = server;\n        this.ws = new Socket(this.server, this);\n        this.ws.iniSocket();\n        this.onConnect = onConnect;\n\n\n        this.connectionStatus = ConnectionStatus.CONNECTING;\n        this.playerStatus = PlayerStatus.WAITING;\n        this.username = \"\";\n        this.player = null;\n\n\n    }\n\n\n    send(packet) {\n\n        console.log(\"Sending Packet ->>>>>\" +packet.constructor.name);\n        this.ws.send(packet);\n    }\n\n    onReceive(messageEvent) {\n        if (typeof messageEvent.data !== \"object\")\n            return;\n\n        this.packetHandler(messageEvent.data);\n\n\n    }\n\n    onOpen(onOpenEvent) {\n        console.log(\"Connected to server\");\n        console.log(onOpenEvent);\n        this.connectionStatus = ConnectionStatus.OPEN;\n        this.playerStatus = PlayerStatus.CONNECTED;\n        this.onConnect(this);\n\n    }\n\n    onClose(onCloseEvent) {\n        console.log(\"OnClose to server\");\n        console.log(onCloseEvent);\n        this.connectionStatus = ConnectionStatus.CLOSED;\n    }\n\n    packetHandler(data) {\n        let x = new Uint8Array(data);\n        const reader = new Reader(x);\n        const packetSize = reader.readInt2();\n        const packetId = reader.readInt2();\n        const packetClass = PacketsDictionary[packetId];\n        const packet = packetClass.parsePacketData(packetSize, reader, packetClass);\n        packet.handleReceivedPacket(this);\n    }\n\n    setPlayerName(name) {\n        let p = new NamePacket(name);\n        this.send(p);\n    }\n\n}\n\nexport {ConnectionStatus, Client, PlayerStatus};","import Reader from './utils/reader.js';\nimport Writer from './utils/writer.js';\n\nclass Packet {\n    constructor() {\n        this.data = null;\n        this.packetId = -1;\n        this.packetSize = 0;\n        this.reader = null\n    }\n\n\n    setPacketData(data) {\n        this.data = data;\n    }\n\n\n    toHexString() {\n        if (this.reader === null)\n            throw new Error(\"Reader is null\");\n\n        return this.reader.toHexString();\n    }\n\n\n    parsePacket() {\n        throw new Error(\"Not implemented\");\n    }\n\n    static parsePacketData(packetSize, reader, packet) {\n        let p = new packet();\n        console.log(\"Received Packet <-----: \" + p.constructor.name);\n\n        p.reader = reader;\n        p.data = reader.data;\n        p.packetSize = packetSize;\n        p.parsePacket();\n        return p;\n    }\n\n    handleReceivedPacket(client) {\n        throw new Error(\"Not implemented\");\n    }\n\n    finalize() {\n        throw new Error(\"Not implemented\");\n    }\n\n}\n\nexport default Packet;","import Packet from '../packet.js';\nimport Writer from '../utils/writer.js';\nimport Player from \"../../ui/objects/player.js\";\nimport {convertIntColorToHex} from \"../../ui/utils.js\";\nimport Point from \"../../ui/objects/point\";\n\n\nclass DirectionPacket extends Packet {\n\n    constructor(direction, position) {\n        super();\n        this.dir = direction;\n        this.packetId = 1006;\n        this.position = position;\n    }\n\n\n    // Handel Server Response\n    parsePacket() {\n    }\n\n    finalize() {\n        // Handle Server Request\n        // Send Empty Packet As Ask For Ready\n        const writer = new Writer(this.packetId);\n        writer.writeStringInBytes(this.dir);\n        writer.writeIntInBytes(this.position.x, 2);\n        writer.writeIntInBytes(this.position.y, 2);\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n    }\n}\n\nexport default DirectionPacket;","import Packet from \"../packet\";\nimport Reader from '../utils/reader.js';\nimport Writer from '../utils/writer.js';\nimport Rectangle from \"../../ui/objects/rectangle.js\";\nimport Point from \"../../ui/objects/point.js\";\nimport {convertIntColorToHex} from \"../../ui/utils.js\";\nimport Block from \"../../ui/objects/block\";\n\nclass FillAreaPacket extends Packet {\n    constructor() {\n        super();\n        this.packetId = 1003;\n        // Shape\n        this.rectangle = null;\n        this.width = 0;\n        this.height = 0;\n        this.x = 0;\n        this.y = 0;\n\n        // Colors\n        this.colorBrighter = 0;\n        this.colorDarker = 0;\n        this.colorSlightlyBrighter = 0\n        this.colorPattern = 0\n        this.colorPatternEdge = 0\n        this.playerId = 0;\n\n    }\n\n    finalize() {\n        // Handle Server Request\n        // Send Empty Packet As Ask For Ready\n        const writer = new Writer(this.packetId);\n        return writer.finalize();\n    }\n\n    parsePacket() {\n        const reader= this.reader;\n\n        this.x = reader.readInt2();\n        this.y = reader.readInt2();\n        this.width = reader.readInt2();\n        this.height = reader.readInt2();\n\n        this.playerId = reader.readInt4();\n        this.colorBrighter = convertIntColorToHex(reader.readInt4());\n        this.colorDarker = convertIntColorToHex(reader.readInt4());\n        this.colorSlightlyBrighter = convertIntColorToHex(reader.readInt4());\n        this.colorPattern = convertIntColorToHex(reader.readInt4());\n        this.colorPatternEdge = convertIntColorToHex(reader.readInt4());\n\n        this.rectangle = new Rectangle(new Point(this.x, this.y), new Point(this.x + this.width, this.y + this.height));\n\n\n    }\n\n    handleReceivedPacket(client) {\n        console.log(\"Received Fill Area Packet\");\n\n        const colorsWithId = {\n            brighter: this.colorBrighter,\n            darker: this.colorDarker,\n            slightlyBrighter: this.colorSlightlyBrighter,\n            pattern: this.colorPattern,\n            patternEdge: this.colorPatternEdge,\n            id: this.playerId\n        }\n        Block.convertRectToBlock(this.rectangle, colorsWithId,window.gameEngine.gameObjects.blocks,\n            window.gameEngine.gameObjects.myPlayer\n            );\n\n    }\n}\n\nexport default FillAreaPacket;","import Packet from '../packet.js';\nimport Reader from '../utils/reader.js';\nimport Writer from '../utils/writer.js';\nimport {PlayerStatus} from \"../client.js\"\nimport Ready from \"./ready\";\nimport Player  from \"../../ui/objects/player\";\nimport Point from \"../../ui/objects/point\";\n\nclass NamePacket extends Packet {\n\n    constructor(name) {\n        super();\n        this.name = name;\n        this.packetId = 1001;\n        this.isVerified = false;\n        this.userId = 0;\n    }\n\n\n    // Handel Server Response\n    parsePacket() {\n        const nameLength = this.reader.readInt2();\n        this.name = this.reader.readStringFromBytes(nameLength);\n        this.userId = this.reader.readInt4();\n        this.isVerified = this.reader.readInt1() === 1;\n\n    }\n\n    finalize() {\n        const writer = new Writer(this.packetId);\n        writer.writeStringInBytes(this.name);\n        writer.writeIntInBytes(this.isVerified ? 1 : 0, 1)\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n        console.log(\"Received Name Packet\");\n\n\n        if (this.isVerified) {\n\n            const player = new Player(new Point(0,0), this.userId);\n            player.isMyPlayer = true;\n\n            client.player = player;\n            client.isVerified = this.isVerified;\n            client.username = this.name;\n            client.playerStatus = PlayerStatus.READY;\n            window.gameEngine.gameObjects.addPlayer(player);\n\n            client.send(new Ready());\n        }else\n        {\n            //TODO Handle Not Verified Name\n        }\n\n    }\n}\n\nexport default NamePacket;","import NamePacket from \"./namePacket\";\nimport Ready from \"./ready\";\nimport FillAreaPacket from \"./fillArea\";\nimport PlayerStatePacket from \"./playerState\";\nimport WaitingBlocksPacket from \"./waitingBlocks\";\nimport DirectionPacket from \"./direction\";\nimport PingPacket from \"./ping\";\nimport PongPacket from \"./pong\";\nimport RequestWaitingBlockPacket from \"./requestWaitingBlocks\";\nimport PlayerRemovedPacket from \"./playerRemoved\";\nimport StopDrawingWaitingBlocksPacket from \"./stopDrawingWaitingBlocks\";\n\nconst PacketsDictionary = {\n    1001: NamePacket,\n    1004: PlayerStatePacket,\n    1002: Ready,\n    1003: FillAreaPacket,\n    1005: WaitingBlocksPacket,\n    1006: DirectionPacket,\n    1007: PingPacket,\n    1008: PongPacket,\n    1009: RequestWaitingBlockPacket,\n    1010: PlayerRemovedPacket,\n    1011: StopDrawingWaitingBlocksPacket,\n}\n\n\nexport default PacketsDictionary;","import Packet from '../packet.js';\nimport Writer from '../utils/writer.js';\nimport Player from \"../../ui/objects/player.js\";\nimport {convertIntColorToHex} from \"../../ui/utils.js\";\nimport Point from \"../../ui/objects/point\";\n\n\nclass PingPacket extends Packet {\n\n    constructor() {\n        super();\n        this.packetId = 1007;\n    }\n\n\n    // Handel Server Response\n    parsePacket() {\n\n    }\n\n    finalize() {\n        // Handle Server Request\n        const writer = new Writer(this.packetId);\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n    }\n}\n\nexport default PingPacket;","import Packet from '../packet.js';\nimport Writer from '../utils/writer.js';\nimport Player from \"../../ui/objects/player.js\";\nimport {convertIntColorToHex} from \"../../ui/utils.js\";\nimport Point from \"../../ui/objects/point\";\n\n\nclass PlayerRemovedPacket extends Packet {\n\n    constructor() {\n        super();\n        this.userId = null;\n        this.packetId = 1010;\n        this.player = null;\n\n    }\n\n\n    // Handel Server Response\n    static parsePacket() {\n        this.userId = this.reader.readInt4();\n    }\n\n    finalize() {\n        // Handle Server Request\n        // Send Empty Packet As Ask For Ready\n        const writer = new Writer(this.packetId);\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n        const player = window.gameEngine.gameObjects.players[this.userId];\n        if(player)\n            window.gameEngine.gameObjects.removePlayer(player);\n\n    }\n}\n\nexport default PlayerRemovedPacket;","import Packet from '../packet.js';\nimport Writer from '../utils/writer.js';\nimport Player from \"../../ui/objects/player.js\";\nimport {convertIntColorToHex} from \"../../ui/utils.js\";\nimport Point from \"../../ui/objects/point\";\n\n\nclass PlayerStatePacket extends Packet {\n\n    constructor(userId, mapSize) {\n        super();\n        this.userId = userId;\n        this.packetId = 1004;\n        this.player = null;\n\n    }\n\n\n    // Handel Server Response\n    parsePacket() {\n        const reader = this.reader;\n        this.userId = reader.readInt4();\n        this.playerName = reader.readString();\n\n        this.playerX = reader.readInt2();\n        this.playerY = reader.readInt2();\n        this.direction = reader.readString();\n\n\n        // Colors\n        this.colorBrighter = convertIntColorToHex(reader.readInt4());\n        this.colorDarker = convertIntColorToHex(reader.readInt4());\n        this.colorSlightlyBrighter = convertIntColorToHex(reader.readInt4());\n        this.colorPattern = convertIntColorToHex(reader.readInt4());\n        this.colorPatternEdge = convertIntColorToHex(reader.readInt4());\n\n    }\n\n    finalize() {\n        // Handle Server Request\n        // Send Empty Packet As Ask For Ready\n        const writer = new Writer(this.packetId);\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n        console.log(\"PlayerState Ready Packet\");\n\n        const myPlayer = client.player;\n\n        let player = new Player(new Point(0, 0), this.userId);\n        player = window.gameEngine.gameObjects.addPlayer(player);\n\n\n        player.name = this.playerName;\n        player.colorBrighter = this.colorBrighter;\n        player.colorDarker = this.colorDarker;\n        player.colorSlightlyBrighter = this.colorSlightlyBrighter;\n        player.colorPattern = this.colorPattern;\n        player.colorPatternEdge = this.colorPatternEdge;\n\n\n        player.hasReceivedPosition = true;\n\n        // When Receiving Player State\n        // Next Frame Move Relative To Server Pos\n        player.moveRelativeToServerPosNextFrame = true;\n        player.lastServerPosSentTime = Date.now();\n        myPlayer.lastPosHasBeenConfirmed = true;\n\n\n        let offset = player.calMoveOffset();\n        let newPos = new Point(this.playerX, this.playerY);\n        let newPosOffset = newPos.clone();\n        let newDir = this.direction;\n\n        newPosOffset = Player.movePlayer(newPosOffset, newDir, offset);\n        let serverSyncedWithClient = true;\n\n\n        if (player.isMyPlayer) {\n            player.lastPosServerSentTime = Date.now();\n\n            // Check If Server Synced With Client\n            // To Draw This Movement or Ignore It\n            // if server predict the same movement\n            // or the movement is to close to server\n            serverSyncedWithClient = player.checkClientMovementSyncedWithServer(newDir\n                , newPosOffset, newPos);\n\n            if (serverSyncedWithClient) {\n                /***\n                 Here We Found That Server and Client not Synced\n                 So We Need To Sync Them\n                 1- Change Player Direction\n                 2- Change Player Position\n                 3- Request Waiting Blocks From Server\n                 4- Clear Send Dir Queue\n                 */\n                player.changeCurrentDir(newDir, newPos, false, false);\n                player.requestWaitingBlocks();\n                player.sendDirQueue = [];\n            }\n\n            player.serverPos = newPosOffset.clone();\n            player.serverDir = newDir;\n\n            player.removeBlocksOutsideCamera();\n        } else {\n            player.updatePlayerDirection(newDir);\n        }\n\n        if (serverSyncedWithClient) {\n            player.position = newPosOffset.clone();\n            player.addWaitingBlocks(newPos);\n        }\n\n        //Start To Handel Draw Position\n        if (!player.drawPosSet) {\n            player.drawPosSet = true;\n            player.drawPosition = player.position.clone();\n        }\n\n    }\n}\n\nexport default PlayerStatePacket;","import Packet from '../packet.js';\nimport Writer from '../utils/writer.js';\nimport Player from \"../../ui/objects/player.js\";\nimport {convertIntColorToHex} from \"../../ui/utils.js\";\nimport Point from \"../../ui/objects/point\";\nimport * as GameMath from \"../../utils/math\";\n\nclass PongPacket extends Packet {\n\n    constructor() {\n        super();\n        this.packetId = 1008;\n    }\n\n\n    // Handel Server Response\n     parsePacket() {\n\n    }\n\n    finalize() {\n        // Handle Server Request\n        const writer = new Writer(this.packetId);\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n        const myPlayer = client.player;\n        const ping = Date.now() - myPlayer.lastPingTime;\n        const currentPingDiff = Math.abs(ping - myPlayer.severLastPing);\n        myPlayer.serverPingDiff = Math.max(myPlayer.serverPingDiff, currentPingDiff);\n        myPlayer.serverPingDiff = GameMath.linearInterpolate(currentPingDiff, myPlayer.serverPingDiff, 0.5);\n        myPlayer.serverAvgPing = GameMath.linearInterpolate(myPlayer.serverAvgPing, ping, 0.5);\n        myPlayer.severLastPing = ping;\n        myPlayer.lastPingTime = Date.now();\n        myPlayer.waitingForPing = false;\n    }\n}\n\nexport default PongPacket;","import Packet from '../packet.js';\nimport Writer from '../utils/writer.js';\nimport Player from \"../../ui/objects/player.js\";\nimport {convertIntColorToHex} from \"../../ui/utils.js\";\nimport Point from \"../../ui/objects/point\";\n\n\nclass Ready extends Packet {\n\n    constructor(userId, mapSize) {\n        super();\n        this.userId = userId;\n        this.packetId = 1002;\n        this.mapSize = mapSize;\n        this.playerName = \"\";\n        this.playerX = 0;\n        this.playerY = 0;\n        this.direction = 0;\n\n\n        // Colors\n        this.colorBrighter = 0;\n        this.colorDarker = 0;\n        this.colorSlightlyBrighter = 0\n        this.colorPattern = 0\n        this.colorPatternEdge = 0\n    }\n\n\n    // Handel Server Response\n\n    parsePacket() {\n        const reader = this.reader;\n\n        this.userId = reader.readInt4();\n        this.mapSize = reader.readInt2();\n        this.playerName = reader.readString();\n\n        this.playerX = reader.readInt2();\n        this.playerY = reader.readInt2();\n        this.direction = reader.readString();\n\n\n        // Colors\n        this.colorBrighter = convertIntColorToHex(reader.readInt4());\n        this.colorDarker = convertIntColorToHex(reader.readInt4());\n        this.colorSlightlyBrighter = convertIntColorToHex(reader.readInt4());\n        this.colorPattern = convertIntColorToHex(reader.readInt4());\n        this.colorPatternEdge = convertIntColorToHex(reader.readInt4());\n    }\n\n    finalize() {\n        // Handle Server Request\n        // Send Empty Packet As Ask For Ready\n        const writer = new Writer(this.packetId);\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n        console.log(\"Received Ready Packet\");\n        const player = client.player;\n\n        player.name = this.playerName;\n        player.colorBrighter = this.colorBrighter;\n        player.colorDarker = this.colorDarker;\n        player.colorSlightlyBrighter = this.colorSlightlyBrighter;\n        player.colorPattern = this.colorPattern;\n        player.colorPatternEdge = this.colorPatternEdge;\n        // player.position = new Point(packet.playerX, packet.playerY);\n        // player.dir = packet.direction;\n        console.log(\"READY\", player);\n        window.gameEngine.gameObjects.mapSize = this.mapSize;\n        player.isReady = true;\n        console.log(window.gameEngine.gameObjects);\n\n\n    }\n}\n\nexport default Ready;","import Packet from '../packet.js';\nimport Writer from '../utils/writer.js';\n\nclass RequestWaitingBlockPacket extends Packet {\n\n    constructor() {\n        super();\n        this.packetId = 1009;\n\n\n    }\n\n\n    // Handel Server Response\n     parsePacket() {\n    }\n\n    finalize() {\n        // Handle Server Request\n        // Send Empty Packet As Ask For Ready\n        const writer = new Writer(this.packetId);\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n        console.log(\"RequestWaitingBlockPacket\", this);\n\n    }\n}\n\nexport default RequestWaitingBlockPacket;","import Packet from '../packet.js';\nimport Writer from '../utils/writer.js';\nimport Point from \"../../ui/objects/point\";\n\n\nclass StopDrawingWaitingBlocksPacket extends Packet {\n\n    constructor() {\n        super();\n        this.packetId = 1011;\n        this.player = null;\n        this.userId = null;\n        this.lastBlock = null;\n\n    }\n\n\n    // Handel Server Response\n    parsePacket() {\n        this.userId = this.reader.readInt4();\n        const vec = new Point(this.reader.readInt2(), this.reader.readInt2());\n        this.lastBlock = vec;\n\n    }\n\n    finalize() {\n        // Handle Server Request\n        // Send Empty Packet As Ask For Ready\n        const writer = new Writer(this.packetId);\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n        const playerList = window.gameEngine.gameObjects.players;\n        let player = null;\n        if (this.userId in playerList) {\n            player = playerList[this.userId];\n        } else {\n            throw new Error(\"Player Not Found We Need To Send Player Colors\");\n        }\n\n        if (player.waitingBlocks.length > 0) {\n            const playerWaitingBlocks = player.waitingBlocks.getLast.blocks;\n            if (playerWaitingBlocks.length > 0) {\n                playerWaitingBlocks.push(this.lastBlock);\n            }\n        }\n\n        if (player.isMyPlayer && player.isGettingWaitingBlocks) {\n            player.skipGettingWaitingBlocksRespose = true;\n        }\n\n        player.waitingBlocks.push({\n            vanishTimer: 0,\n            blocks: []\n        });\n\n\n    }\n}\n\nexport default StopDrawingWaitingBlocksPacket;","import Packet from '../packet.js';\nimport Writer from '../utils/writer.js';\nimport Player from \"../../ui/objects/player.js\";\nimport {convertIntColorToHex} from \"../../ui/utils.js\";\nimport Point from \"../../ui/objects/point\";\n\n\nclass WaitingBlocksPacket extends Packet {\n\n    constructor() {\n        super();\n        this.packetId = 1005;\n        this.player = null;\n        this.userId = null;\n        this.blocks = [];\n\n    }\n\n\n    // Handel Server Response\n    parsePacket() {\n        const reader = this.reader;\n        this.userId = reader.readInt4();\n        const blocksCount = reader.readInt2();\n        for (let i = 0; i < blocksCount; i++) {\n            const vec = new Point(reader.readInt2(), reader.readInt2());\n            this.blocks.push(vec);\n        }\n    }\n\n    finalize() {\n        // Handle Server Request\n        // Send Empty Packet As Ask For Ready\n        const writer = new Writer(this.packetId);\n        return writer.finalize();\n    }\n\n\n    handleReceivedPacket(client) {\n        const playerList = window.gameEngine.gameObjects.players;\n        let player = null;\n        if (this.userId in playerList) {\n            player = playerList[this.userId];\n        } else {\n            throw new Error(\"Player Not Found We Need To Send Player Colors\");\n        }\n\n\n        let replaceStack = false;\n        if (player.isMyPlayer) {\n            if (player.skipGettingWaitingBlocksRespose) {\n                player.skipGettingWaitingBlocksRespose = false;\n                player.waitingPushedDuringReceiving = [];\n            } else {\n\n                // If Player Requesting Waiting Blocks vai RequestWaitingBlocks Packet\n                if (player.isGettingWaitingBlocks) {\n                    player.isGettingWaitingBlocks = false;\n                    replaceStack = true;\n                    for (let i = 0; i < player.waitingPushedDuringReceiving.length; i++) {\n                        const vec = player.waitingPushedDuringReceiving[i];\n                        this.blocks.push(vec);\n                    }\n                    player.waitingPushedDuringReceiving = [];\n                }\n\n                if (player.waitingBlocks.length > 0) {\n                    const lastBlock = player.waitingBlocks[player.waitingBlocks.length - 1];\n                    if (lastBlock.blocks.length <= 0 && this.blocks.length > 0) {\n                        player.requestWaitingBlocks();\n                    }\n                }\n            }\n        }\n\n\n        if (replaceStack) {\n            if (player.waitingBlocks.length > 0) {\n                const lastBlock = player.waitingBlocks[player.waitingBlocks.length - 1];\n                lastBlock.blocks = this.blocks;\n                lastBlock.vanishTimer = 0;\n            } else {\n                replaceStack = false;\n            }\n        }\n        if (!replaceStack) {\n            player.waitingBlocks.push({\n                vanishTimer: 0,\n                blocks: this.blocks\n            });\n        }\n\n        console.log(\"Waiting Blocks\", [...player.waitingBlocks]);\n\n    }\n}\n\nexport default WaitingBlocksPacket;","class Socket{\n    constructor(server,client) {\n        this.server = server;\n        this.onReceive = client.onReceive.bind(client);\n        this.onOpen = client.onOpen.bind(client);\n        this.onClose = client.onClose.bind(client);\n        this.ws = null;\n    }\n\n    iniSocket() {\n        this.ws = new WebSocket(this.server);\n        let ws = this.ws;\n        ws.binaryType = \"arraybuffer\";\n        ws.onopen = this.onOpen;\n        ws.onmessage = this.onReceive;\n        ws.onclose = this.onClose;\n    }\n\n    send(packet) {\n        this.ws.send(packet.finalize());\n    }\n\n}\n\nexport default Socket;","const intToBytes = (value, byteorder = 'little', signed = false, numBytes = 4) => {\n    const littleEndian = (byteorder === 'little');\n    const bytes = new Uint8Array(numBytes);\n    const view = new DataView(bytes.buffer);\n\n    if (signed && value < 0) {\n        // Convert negative value to 2's complement representation\n        value = (1 << (8 * numBytes)) + value;\n    }\n\n    for (let i = 0; i < numBytes; i++) {\n        const shift = littleEndian ? i * 8 : (numBytes - 1 - i) * 8;\n        view.setUint8(i, (value >> shift) & 0xFF);\n    }\n\n    return bytes;\n}\nconst bytesToInt = (bytes, byteorder = 'little', signed = false) => {\n    const view = new DataView(bytes.buffer);\n    const littleEndian = (byteorder === 'little');\n\n    if (bytes.length <= 0 || bytes.length > 8) {\n        throw new Error('Unsupported number of bytes');\n    }\n    let value = 0;\n\n    for (let i = 0; i < bytes.length; i++) {\n        const shift = littleEndian ? i * 8 : (bytes.length - 1 - i) * 8;\n        value |= view.getUint8(i) << shift;\n    }\n    if (signed) {\n        const signBit = 1 << (8 * bytes.length - 1);\n        if (value & signBit) {\n            value = value - (signBit << 1);\n        }\n    }\n    return value;\n}\n\n\nconst toHexString = (data) => {\n    return Array.from(data)\n        .map(byte => '0x' + byte.toString(16).padStart(2, '0'))\n        .join(' ');\n}\n\nexport {intToBytes, bytesToInt,toHexString};","import {intToBytes, bytesToInt, toHexString} from './bytesUtils.js';\n\n\nclass Reader {\n    constructor(data) {\n        this.data = data;\n        this.position = 0;\n    }\n\n    readIntFromBytes(bytesNumber = 2) {\n        const bytes = this.data.slice(this.position, this.position + bytesNumber);\n        this.position += bytesNumber;\n        return bytesToInt(bytes, 'little', false);\n    }\n\n    readStringFromBytes(stringLength) {\n        const bytes = this.data.slice(this.position, this.position + stringLength);\n        this.position += stringLength;\n        return new TextDecoder().decode(bytes);\n    }\n\n    readString() {\n        const stringLength = this.readInt2();\n        return this.readStringFromBytes(stringLength);\n    }\n\n\n    readInt1() {\n        return this.readIntFromBytes(1);\n    }\n    readInt4() {\n        return this.readIntFromBytes(4);\n    }\n    readInt2() {\n        return this.readIntFromBytes(2);\n    }\n    readInt8() {\n        return this.readIntFromBytes(8);\n    }\n    readInt16() {\n        return this.readIntFromBytes(16);\n    }\n    readInt32() {\n        return this.readIntFromBytes(32);\n    }\n\n\n    toHexString()\n    {\n        return toHexString(this.data);\n    }\n\n}\n\nexport default Reader;","import {intToBytes, bytesToInt, toHexString} from './bytesUtils.js';\n\nclass Writer {\n    // Infinity\n    constructor(packetId = -1) {\n        this.packetSize = 20;\n        this.packetId = packetId;\n\n        this.data = new Uint8Array(this.packetSize);\n        this.position = 0;\n        this.setPacketId();\n    }\n\n    setPacketId() {\n        this.position = 2;\n        this.writeIntInBytes(this.packetId);\n        this.updatePacketSize()\n\n    }\n\n    updatePacketSize() {\n        this.packetSize = this.position;\n        const currentOffset = this.position;\n        this.position = 0;\n        const b = intToBytes(this.packetSize, 'little', false, 2);\n        this.data.set(b, this.position);\n        this.position = currentOffset;\n    }\n\n    writeIntInBytes(number, bytesNumber = 2) {\n        let bytes = intToBytes(number, 'little', false, bytesNumber);\n        this.ensureCapacity(bytesNumber);\n        this.data.set(bytes, this.position);\n        this.position += bytesNumber;\n        this.updatePacketSize();\n    }\n\n\n    writeStringInBytes(string) {\n        let stringLength = string.length;\n        this.writeIntInBytes(stringLength, 2);\n        let bytes = new TextEncoder().encode(string);\n        this.ensureCapacity(stringLength);\n        this.data.set(bytes, this.position);\n        this.position += stringLength;\n        this.updatePacketSize();\n    }\n\n    ensureCapacity(requiredSize) {\n\n        if (this.position + requiredSize > this.data.length) {\n            const newSize = requiredSize + (this.data.length) * 2;\n            const newData = new Uint8Array(newSize);\n            newData.set(this.data);\n            this.data = newData;\n        }\n\n    }\n\n    finalize() {\n        return this.data.slice(0, this.position);\n    }\n\n    toHexString() {\n        return toHexString(this.finalize());\n    }\n\n\n}\n\nexport default Writer;","import Point from \"./point.js\";\nimport * as GameMath from \"../../utils/math.js\";\nimport * as GameUtils from \"../utils.js\";\nimport Rectangle from \"./rectangle.js\";\n\nclass Block {\n    constructor(p) {\n        this.position = p\n\n        this.currentBlock = -1;\n        this.nextBlock = -1;\n\n\n        this.animDirection = 0;\n        this.animProgress = 0;\n        this.animDelay = 0;\n\n        this.colorsWithId = null;\n\n        this.lastSetTime = Date.now()\n    }\n\n    setBlockId(id, delay) {\n        this.lastSetTime = Date.now();\n        if (!delay) {\n            this.currentBlock = this.nextBlock = id;\n            this.animDirection = 0;\n            this.animProgress = 1;\n        } else {\n\n            this.animDelay = delay;\n\n            let isCurrentBlock = id === this.currentBlock;\n            let isNextBlock = id === this.nextBlock;\n\n            if (isCurrentBlock && isNextBlock) {\n                if (this.animDirection === -1) {\n                    this.animDirection = 1;\n                }\n            }\n\n            if (isCurrentBlock && !isNextBlock) {\n                this.animDirection = 1;\n                this.nextBlock = this.currentBlock;\n            }\n\n            if (!isCurrentBlock && isNextBlock) {\n                if (this.animDirection === 1) {\n                    this.animDirection = -1;\n                }\n            }\n\n            if (!isCurrentBlock && !isNextBlock) {\n                this.nextBlock = id;\n                this.animDirection = -1;\n            }\n        }\n\n    }\n\n    static getBlockAt(p, blocks) {\n        for (let block of blocks) {\n            if (block.position.equals(p)) {\n                return block;\n            }\n        }\n        let block = new Block(p);\n        blocks.push(block);\n        return block;\n\n    }\n\n    handleAnimation() {\n        if (this.animDelay > 0) {\n            this.animDelay -= window.gameEngine.deltaTime;\n        } else {\n            this.animProgress += window.gameEngine.deltaTime * this.animDirection * 0.003;\n        }\n\n        if (this.animProgress > 1) {\n            this.animProgress = 1;\n            this.animDirection = 0;\n        }\n\n        if (this.animProgress < 0) {\n            this.animProgress = 0;\n            this.animDirection = 1;\n            this.currentBlock = this.nextBlock;\n            return false\n        }\n        return true;\n    }\n\n\n    drawBorderBlock(ctx, color, size) {\n        if (this.currentBlock !== 0)\n            return;\n\n        ctx.fillStyle = color;\n        // Calculate the new position Base Of the size\n        const newP = window.game.calBlocksGap(this.position, size);\n        ctx.fillRect(newP.x, newP.y, size, size);\n    }\n\n    drawEmptyBlock(ctx, darkColor, brightColor, size) {\n        if (this.currentBlock !== 1)\n            return;\n\n\n        const sizeFactor = 10 / 7;\n        const newS = size * sizeFactor; // 10\n        let animProgress = 0;\n\n        const newP = window.game.calBlocksGap(this.position, newS);\n        const spacingTwenty = GameMath.calPercentage(newS, 0.2);\n        const spacingTen = GameMath.calPercentage(newS, 0.1); // 1\n        const spacingNinty = GameMath.calPercentage(newS, 0.9);\n\n\n        /////////////////////// SHADOW ////////////////////////\n        if (this.animProgress > .8) {\n            GameUtils.drawInCtxRec(ctx, newP, size, darkColor, spacingTwenty);\n        }\n\n        ctx.fillStyle = brightColor;\n        if (this.animProgress === 1) {\n            GameUtils.drawInCtxRec(ctx, newP, size, brightColor, spacingTen);\n        } else if (this.animProgress < .4) {\n            animProgress = this.animProgress * 2.5;\n            ctx.beginPath();\n            ctx.moveTo(newP.x + spacingTwenty, newP.y + GameMath.linearInterpolate(spacingNinty, spacingTwenty, animProgress));\n            ctx.lineTo(newP.x + spacingTwenty, newP.y + spacingNinty);\n            ctx.lineTo(newP.x + GameMath.linearInterpolate(spacingTwenty, spacingNinty, animProgress), newP.y + spacingNinty);\n            ctx.fill();\n        } else if (this.animProgress < 0.8) {\n            animProgress = this.animProgress * 2.5 - 1;\n            ctx.beginPath();\n            ctx.moveTo(newP.x + spacingTwenty, newP.y + spacingTwenty);\n            ctx.lineTo(newP.x + spacingTwenty, newP.y + 9);\n            ctx.lineTo(newP.x + spacingNinty, newP.y + spacingNinty);\n            ctx.lineTo(newP.x + spacingNinty, newP.y + GameMath.linearInterpolate(spacingNinty, spacingTwenty, animProgress));\n            ctx.lineTo(newP.x + GameMath.linearInterpolate(spacingTwenty, spacingNinty, animProgress), newP.y + spacingTwenty);\n            ctx.fill();\n        } else {\n\n            animProgress = this.animProgress * 5 - 4;\n            GameUtils.drawInCtxRec(ctx, newP, size, brightColor, GameMath.linearInterpolate(2, 1, animProgress));\n        }\n    }\n\n    drawRegularBlock(ctx, darkColor, brightColor, size) {\n\n\n        if (this.currentBlock < 2)\n            return;\n\n        if (this.colorsWithId === null) {\n            return;\n        }\n\n\n        let bcolor = this.colorsWithId.pattern;\n        let dcolor = this.colorsWithId.patternEdge;\n\n\n        const sizeFactor = 10 / 9;\n        const newS = size * sizeFactor; // 10\n        let animProgress = 0;\n\n        const newP = window.game.calBlocksGap(this.position, newS);\n        const spacingTwenty = GameMath.calPercentage(newS, 0.2);\n        const spacingTen = GameMath.calPercentage(newS, 0.1); // 1\n        const spacingNinty = GameMath.calPercentage(newS, 0.9);\n\n        if (this.animProgress > 0.8) {\n            ctx.fillStyle = dcolor;\n            ctx.fillRect(newP.x + spacingTen, newP.y + spacingTen, size, size);\n        }\n\n\n        ctx.fillStyle = bcolor;\n        if (this.animProgress === 1) {\n            GameUtils.drawInCtxRec(ctx, newP, size, bcolor, spacingTen);\n        } else if (this.animProgress < .4) {\n            animProgress = this.animProgress * 2.5;\n            ctx.beginPath();\n            ctx.moveTo(newP.x + spacingTen, newP.y + GameMath.linearInterpolate(newS, spacingTen, animProgress));\n            ctx.lineTo(newP.x + spacingTen, newP.y + newS);\n            ctx.lineTo(newP.x + GameMath.linearInterpolate(spacingTen, newS, animProgress), newP.y + newS);\n            ctx.fill();\n        } else if (this.animProgress < 0.8) {\n            animProgress = this.animProgress * 2.5 - 1;\n            ctx.beginPath();\n            ctx.moveTo(newP.x + spacingTen, newP.y + spacingTen);\n            ctx.lineTo(newP.x + spacingTen, newP.y + newS);\n            ctx.lineTo(newP.x + newS, newP.y + newS);\n            ctx.lineTo(newP.x + newS, newP.y + GameMath.linearInterpolate(newS, spacingTen, animProgress));\n            ctx.lineTo(newP.x + GameMath.linearInterpolate(spacingTen, newS, animProgress), newP.y + spacingTen);\n            ctx.fill();\n        } else {\n\n            animProgress = this.animProgress * 5 - 4;\n            GameUtils.drawInCtxRec(ctx, newP, size, bcolor, GameMath.linearInterpolate(1, 0, animProgress));\n        }\n\n    }\n\n    draw(ctx, checkViewport) {\n        if (checkViewport && window.camera.checkObjectInCamera(this.position)) {\n            console.log(\"not in camera\");\n            return;\n        }\n        let canDraw = this.handleAnimation();\n        if (!canDraw) {\n            return;\n        }\n\n        this.drawBorderBlock(ctx, \"#420707\", 10);\n        this.drawEmptyBlock(ctx, \"#2d2926\", \"#4e463f\", 7);\n        this.drawRegularBlock(ctx, \"#2d2926\", \"#4e463f\", 9);\n        //Ocuupited Block\n    }\n\n\n    static convertRectToBlock(rect, colorsWithId, listOfBlocks, myPlayer) {\n\n        const viewPortRadius = window.game.viewPortRadius;\n        if (myPlayer) {\n            rect.min.x = Math.max(rect.min.x, Math.round(myPlayer.position.x - viewPortRadius));\n            rect.min.y = Math.max(rect.min.y, Math.round(myPlayer.position.y - viewPortRadius));\n\n            rect.max.x = Math.min(rect.max.x, Math.round(myPlayer.position.x + viewPortRadius));\n            rect.max.y = Math.min(rect.max.y, Math.round(myPlayer.position.y + viewPortRadius));\n        }\n\n        for (let {x, y} of rect.for_each()) {\n            let block = Block.getBlockAt(new Point(x, y), listOfBlocks);\n            block.colorsWithId = colorsWithId;\n            block.setBlockId(colorsWithId.id, Math.random() * 400);\n        }\n\n        // console.log(listOfBlocks);\n    }\n\n}\n\n\nexport default Block;","import Point from \"./point.js\";\nimport Rectangle from \"./rectangle.js\";\nimport * as GameUtils from \"../utils.js\";\nimport * as GameMath from \"../../utils/math.js\";\n\nclass Camera {\n    constructor() {\n        this.zoom = 5;\n        this.camPosition = new Point(0, 0);\n        this.camRotationOffset = 0;\n        this.camPositionOffset = new Point(0, 0);\n        this.camPrevPosition = new Point(0, 0);\n\n        this.camPosSet = false;\n\n        this.camShakeBuffer = [];\n    }\n\n\n    // TODO ADD VIEWPORT RADIUS\n    checkObjectInCamera(point) {\n        return (\n            point.x < this.camPosition.x - window.game.viewPortRadius ||\n            point.x > this.camPosition.x + window.game.viewPortRadius ||\n            point.y < this.camPosition.y - window.game.viewPortRadius ||\n            point.y > this.camPosition.y + window.game.viewPortRadius\n        )\n    }\n\n    shakeCamera(p, rotate = true) {\n        this.camShakeBuffer.push([\n            p, 0, !!rotate\n        ]);\n    }\n\n    shakeCameraDirection(dir, amount = 6, rotate = true) {\n        let x, y = 0;\n        switch (dir) {\n            case 0:\n                x = amount;\n                break;\n            case 1:\n                y = amount;\n                break;\n            case 2:\n                x = -amount;\n                break;\n            case 3:\n                y = -amount;\n                break;\n        }\n        this.shakeCamera(new Point(x, y), rotate);\n    }\n\n    calCameraOffset() {\n        for (let i = this.camShakeBuffer.length - 1; i >= 0; i--) {\n            let shake = this.camShakeBuffer[i];\n            shake[1] = window.gameEngine.deltaTime * 0.003;\n            let shakeTime = shake[1];\n            let shakeTime2 = 0;\n            let shakeTime3 = 0;\n            if (shakeTime < 1) {\n                shakeTime2 = GameUtils.ease.out(shakeTime);\n                shakeTime3 = GameUtils.ease.inout(shakeTime);\n\n            } else if (shakeTime < 8) {\n                shakeTime2 = GameUtils.ease.inout(GameMath.inverseLinearInterpolate(8, 1, shakeTime));\n                shakeTime3 = GameUtils.ease.in(GameMath.inverseLinearInterpolate(8, 1, shakeTime));\n            } else {\n                this.camShakeBuffer.splice(i, 1);\n            }\n            this.camPositionOffset.x += shake[0].x * shakeTime2;\n            this.camPositionOffset.y += shake[0].y * shakeTime2;\n\n            this.camPositionOffset.x += shake[0] * Math.cos(shakeTime * 8) * 0.04 * shakeTime3;\n            this.camPositionOffset.y += shake[0] * Math.cos(shakeTime * 7) * 0.04 * shakeTime3;\n            if (shake[2]) {\n                this.camRotationOffset += Math.cos(shakeTime * 9) * 0.003 * shakeTime3;\n            }\n            console.log(this.camShakeBuffer.length);\n        }\n\n        let limit = 80;\n        let x = this.camPositionOffset.x;\n        let y = this.camPositionOffset.y;\n        x /= limit;\n        y /= limit;\n        x = GameMath.smoothLimit(x);\n        y = GameMath.smoothLimit(y);\n        x *= limit;\n        y *= limit;\n        this.camPositionOffset.x = x;\n        this.camPositionOffset.y = y;\n\n    }\n\n    calZoom(ctx) {\n        let maxPixelRatio = GameUtils.calculate_pixel_ratio();\n        let quality = 1;\n        const canvas = window.game.canvas;\n\n\n        if (ctx.canvas === canvas || true) {\n            const maxDimension = Math.max(canvas.width, canvas.height);\n            const zoomEdge = maxDimension / window.game.maxZoom;\n            const screenPixels = canvas.width * canvas.height;\n            const blockPixels = screenPixels / window.game.maxBlocksNumber;\n            const zoomBlocks = Math.sqrt(blockPixels) / 10;\n            this.zoom = Math.max(zoomEdge, zoomBlocks);\n            ctx.translate(window.game.canvas.width / 2, window.game.canvas.height / 2);\n            const scaleFactor = 10;\n            ctx.rotate(this.camRotationOffset);\n            ctx.scale(this.zoom, this.zoom);\n            ctx.translate(-this.camPrevPosition.x * scaleFactor - this.camPositionOffset.x, -this.camPrevPosition.y * scaleFactor - this.camPositionOffset.y);\n        } else {\n            // ctx.setTransform(maxPixelRatio * quality, 0, 0, maxPixelRatio * quality, 0, 0);\n        }\n    }\n\n\n    moveToPlayer(player) {\n        if (!player) return;\n        if (this.camPosSet) {\n            this.camPosition.x = GameMath.linearInterpolate(this.camPosition.x, player.position.x, 0.03);\n            this.camPosition.y = GameMath.linearInterpolate(this.camPosition.y, player.position.y, 0.03);\n\n        } else {\n            this.camPosition = player.position.clone();\n            this.camPosSet = true;\n        }\n    }\n\n\n    loop() {\n        this.camPrevPosition = this.camPosition;\n        this.calCameraOffset();\n    }\n\n\n    getViewPortRec(pos){\n        const viewPortRadius = window.game.viewPortRadius * 2;\n        const leftSide = new Point(\n            pos.x - viewPortRadius,\n            pos.y - viewPortRadius\n        )\n        const rightSide = new Point(\n            pos.x + viewPortRadius,\n            pos.y + viewPortRadius\n        )\n        return new Rectangle(leftSide, rightSide);\n    }\n\n}\n\n\nexport default Camera;","import Point from \"./point.js\";\nimport * as GameMath from \"../../utils/math.js\";\nimport * as GameUtils from \"../utils.js\";\nimport DirectionPacket from \"../../network/packets/direction\";\nimport {log} from \"three/nodes\";\nimport RequestWaitingBlockPacket from \"../../network/packets/requestWaitingBlocks\";\n\nclass Player {\n\n    constructor(position = new Point(1, 1), id) {\n        this.id = id\n        this.drawPosSet = false;\n\n        this.isMyPlayer = false;\n        this.deathWasCertain = false;\n        this.didUncertainDeathLastTick = false;\n        this.isDeathTimer = 0;\n        this.uncertainDeathPosition = new Point(0, 0);\n        this.deadAnimParts = [];\n        this.deadAnimPartsRandDist = [];\n        this.hitLines = [];\n\n        this.position = position\n        this.drawPosition = new Point(-1, -1);\n        this.serverPosition = new Point(0, 0);\n        this.lastChangedDirPos = new Point(0, 0);\n\n\n        this.waitingBlocks = [];\n        this.name = \"\";\n\n\n        // Colors\n        this.colorBrighter = 0;\n        this.colorDarker = 0;\n        this.colorSlightlyBrighter = 0\n        this.colorPattern = 0\n        this.colorPatternEdge = 0\n\n\n        // Movements\n        this.hasReceivedPosition = false;\n        this.moveRelativeToServerPosNextFrame = false;\n        this.lastServerPosSentTime = 0;\n\n\n        this.isReady = false;\n        this.isDead = false;\n\n        ///\n        this.waitingBlocksDuringWaiting = [];\n        //\n        this.lastPosHasBeenConfirmed = false;\n        this.lastPosServerSentTime = 0;\n        this.myNextDir = '';\n        this.myLastSendDir = '';\n        this.lastDirServerSentTime = 0;\n        this.lastMyPostSetClientSendTime = 0;\n        this.lastConfirmedTimeForPos = 0;\n        this.dir = '';\n        this.sendDirQueue = [];\n        this.clientSideMoves = [];\n        this.changeDirAtCoord = null;\n        this.changeDirAtIsHorizontal = false;\n\n        this.serverPos = new Point(0, 0);\n        this.serverDir = '';\n\n\n        this.waitingForPing = false;\n        this.lastPingTime = 0;\n        this.severLastPing = 0;\n        this.serverAvgPing = 0;\n        this.serverDiffPing = 0;\n\n\n        this.isGettingWaitingBlocks = false;\n        this.skipGettingWaitingBlocksRespose = false;\n        this.waitingPushedDuringReceiving = [];\n\n    }\n\n\n    static getPlayerById(id, players) {\n        for (let p of players) {\n            if (p.id === id) return p;\n        }\n    }\n\n    static isMovingHorizontally(direction) {\n        return direction === 'left' || direction === 'right';\n    }\n\n    static movePlayer(pos, dir, offset) {\n        let workingPos = pos.clone();\n        if (dir === 'up') {\n            workingPos.y -= offset;\n        } else if (dir === 'down') {\n            workingPos.y += offset;\n        } else if (dir === 'left') {\n            workingPos.x -= offset;\n        } else if (dir === 'right') {\n            workingPos.x += offset;\n        }\n        return workingPos;\n\n    }\n\n    static mapControlsToDir(controls) {\n        if (controls === 1) return 'up'; else if (controls === 3) return 'down'; else if (controls === 4) return 'left'; else if (controls === 2) return 'right'; else return '';\n    }\n\n   /**\n     * Verifies if the client's predicted player movement is synchronized with the server's authoritative state.\n     * This function checks the alignment of the player's current or next direction and position against the server's updates.\n     * It is critical for maintaining gameplay integrity by ensuring that all movements rendered client-side are accurate and acknowledged by the server.\n     * This helps prevent discrepancies that can affect game dynamics, such as rubberbanding or desyncs.\n     *\n     * - The function compares the latest direction and position (factoring in calculated offsets for lag) received from the server.\n     * - Returns false if the client’s predictions are confirmed by the server (i.e., no update or correction needed),\n     *   which means the player's state on the client matches the server's data.\n     * - Returns true if discrepancies are found, signaling the need for the client to update its local state based on the latest server information.\n     *\n     * Use this function to ensure that the gameplay remains fluid and consistent, avoiding interruptions due to network latency or processing delays.\n     */\n    checkClientMovementSyncedWithServer(newDir, newPosOffset, newPos) {\n        // Check If dir and por are close to current\n        const distVector = this.position.distanceVector(newPosOffset);\n        if ((this.dir === newDir || this.myNextDir === newDir) &&\n            distVector.x < 1 && distVector.y < 1) {\n            return false\n        }\n\n        // check if last client side move is same as new\n        // if server faster than client\n        if (this.clientSideMoves.length > 0) {\n            const lastClientSideMove = this.clientSideMoves.shift()\n            if (lastClientSideMove.dir === newDir\n                && lastClientSideMove.pos.equals(newPos)) {\n                return false\n            } else {\n                this.clientSideMoves = [];\n            }\n        }\n\n        return true\n\n    }\n\n\n    equals(player) {\n        return this.id === player.id;\n    }\n\n\n    /**\n     * Calculate Move Offset Based On Ping And Game Speed\n     * If Player Is Not My Player Or Ping Is Less Than 50 Return 0\n     * 50 ms is the minimum ping to consider the player is synced with the server\n     * so if not my player no need to calculate offset but if my player and ping is bigger than 50\n     * ping [round trip] / 2 * gameSpeed = offset\n     * @returns {number}\n     */\n    calMoveOffset() {\n        let offset = 0;\n        if (!this.isMyPlayer || this.serverAvgPing <= 50) return offset;\n\n        const gameSpeed = window.game.gameSpeed;\n        offset = (this.serverAvgPing / 2) * gameSpeed;\n        return offset;\n    }\n\n\n    addWaitingBlocks(pos = new Point(0, 0)) {\n        if (this.waitingBlocks.length <= 0) return;\n        const lastBlock = this.waitingBlocks.getLast.blocks;\n        if (lastBlock.length <= 0) return;\n        if (!(lastBlock[0].x !== pos.x || lastBlock[0].y !== pos.y)) return;\n        lastBlock.push(pos.clone());\n\n        if (this.isMyPlayer && this.isGettingWaitingBlocks) {\n            this.waitingPushedDuringReceiving.push(pos);\n        }\n\n    }\n\n    /**\n     * This Function Is Called Every Frame\n     * It Moves The Draw Position To The Position\n     */\n    moveDrawPosToPos() {\n        let target = this.position;\n        this.drawPosition.x = GameMath.linearInterpolate(this.drawPosition.x, target.x, 0.23);\n        this.drawPosition.y = GameMath.linearInterpolate(this.drawPosition.y, target.y, 0.23);\n    }\n\n    /**\n     * Update Player Direction\n     * @param dir\n     */\n    updatePlayerDirection(dir) {\n        this.dir = dir;\n    }\n\n    /**\n     * Check If Player Is Moving Horizontally\n     * @param direction\n     * @returns {boolean}\n     */\n    isMovingHorizontally(direction = this.dir) {\n        return direction === 'left' || direction === 'right';\n    }\n\n    /**\n     * Update Player Position\n     * @param pos\n     */\n    updatePlayerPosition(pos) {\n        this.position = pos;\n    }\n\n    /**\n     * This Is Called In PlayerState Message\n     * To Remove Blocks Outside Camera\n     */\n    removeBlocksOutsideCamera() {\n        const camera = window.camera;\n        const playerRect = camera.getViewPortRec(this.position);\n        const blocks = window.gameEngine.gameObjects.blocks;\n        for (let i = 0; i < blocks.length; i++) {\n            const block = blocks[i];\n            if (!playerRect.pointInRect(block.position)) {\n                blocks.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * This Function Is Called Every Frame\n     * It Checks If The Player Should Change Direction\n     * Based On Next Direction If It Should Change Direction\n     */\n    checkNextDirAndCamera() {\n\n        if (!this.isMyPlayer) return;\n\n        const camera = window.camera;\n        camera.moveToPlayer(this)\n\n\n        if (this.myNextDir === this.dir) return;\n\n        const isHorizontal = this.isMovingHorizontally(this.dir);\n        if (this.changeDirAtIsHorizontal === isHorizontal) return;\n        let changeDirNow = false;\n        const currentCoord = isHorizontal ? this.position.x : this.position.y;\n\n        // Check If Last Direction Complete passed .55 Of Current Block\n        if (GameUtils.isMovingToPositiveDir(this.dir)) {\n            if (this.changeDirAtCoord < currentCoord) changeDirNow = true;\n        } else {\n            if (this.changeDirAtCoord > currentCoord) changeDirNow = true;\n        }\n\n\n        if (changeDirNow) {\n            const newPos = this.position.clone();\n            const tooFar = Math.abs(this.changeDirAtCoord - currentCoord);\n            if (isHorizontal)\n                newPos.x = this.changeDirAtCoord;\n            else\n                newPos.y = this.changeDirAtCoord;\n            this.changeCurrentDir(this.myNextDir, newPos);\n            let offsetPosition = Player.movePlayer(this.position, this.dir, tooFar);\n            this.updatePlayerPosition(offsetPosition);\n        }\n\n    }\n\n    /**\n     * Change Player Direction and Position\n     * Add Waiting Blocks\n     * Add Client Side Move To Check If Server Synced With Client in PlayerState Message\n     * @param dir\n     * @param pos\n     * @param addWaitingBlocks\n     * @param clientDecision\n     */\n    changeCurrentDir(dir, pos, addWaitingBlocks = true, clientDecision = true) {\n        this.updatePlayerDirection(dir);\n        this.myNextDir = dir;\n\n        this.updatePlayerPosition(pos.clone());\n        this.lastChangedDirPos = pos.clone();\n\n\n        if (addWaitingBlocks) {\n            this.addWaitingBlocks(pos);\n        }\n\n\n        // To Check If Player Movement is Synced With Server in\n        // PlayerState Message\n        if (clientDecision) {\n            this.clientSideMoves.push({\n                dir: dir, pos: pos.clone(), time: Date.now()\n            });\n        }\n\n    }\n\n\n    ////////////// DRAWING /////////////////\n    drawPlayerHeadWithEye(ctx) {\n        let newDrawPos = new Point(this.drawPosition.x * 10 + 4.5, this.drawPosition.y * 10 + 4.5);\n        const bigEye = \"#ffff\";\n        const smallEye = \"#000\";\n        let radius = 6;\n        let size = radius;\n        const animationSpeed = 0.005;\n        const eyeAnimation = Math.sin(Date.now() * animationSpeed) * 2;\n        let r = 0.5;\n\n        const gradient = ctx.createRadialGradient(newDrawPos.x - 3, newDrawPos.y - 3, 0, newDrawPos.x, newDrawPos.y, radius);\n        gradient.addColorStop(0, this.colorSlightlyBrighter);\n        gradient.addColorStop(1, this.colorBrighter);\n\n        const c = ctx;\n        c.translate(newDrawPos.x, newDrawPos.y);\n\n        if (this.dir === 'up') {\n            c.rotate(Math.PI * r);\n        } else if (this.dir === 'down') {\n            r += .5 * 2;\n            c.rotate(Math.PI * r);\n        } else if (this.dir === 'left') {\n            r += .5 * 3;\n            c.rotate(Math.PI * r);\n        } else {\n            r += .5;\n            c.rotate(Math.PI * r);\n        }\n\n        c.beginPath();\n        c.arc(0, 0, size, 0, Math.PI * 2, false);\n\n        c.fillStyle = gradient;\n        c.fill();\n\n        // Draw the left white eye\n        c.beginPath();\n        c.fillStyle = bigEye;\n        c.arc(-size / 2, -size / 2.5, size / 4, 0, Math.PI * 2, false);\n        c.fill();\n\n        // Draw the left black eye\n        c.beginPath();\n        c.fillStyle = smallEye;\n        c.arc(-size / 2, -size / 2.5 + eyeAnimation, size / 8, 0, Math.PI * 2, false);\n        c.fill();\n\n        // Draw the right white eye\n        c.beginPath();\n        c.fillStyle = bigEye;\n        c.arc(-size / 2, size / 2.5, size / 4, 0, Math.PI * 2, false);\n        c.fill();\n\n        // Draw the right black eye\n        c.beginPath();\n        c.fillStyle = smallEye;\n        c.arc(-size / 2, size / 2.5 + eyeAnimation, size / 8, 0, Math.PI * 2, false);\n        c.fill();\n\n        // Smile\n        c.beginPath();\n        c.arc(size / 4, 0, size / 2, -0.5 * Math.PI, 0.5 * Math.PI);\n        c.lineWidth = size / 10;\n        c.stroke();\n\n        c.restore();\n        window.gameEngine.camTransform(ctx);\n\n    }\n\n    drawWaitingBlocks(ctx) {\n        if (this.waitingBlocks.length <= 0) return;\n        const gameSpeed = window.game.gameSpeed;\n        const deltaTime = window.gameEngine.deltaTime;\n\n\n        for (let blockIndex = this.waitingBlocks.length - 1; blockIndex >= 0; blockIndex--) {\n            let block = this.waitingBlocks[blockIndex];\n            let isLastBlock = blockIndex === this.waitingBlocks.length - 1;\n\n            if (!isLastBlock || this.isDead) {\n                let speed = (this.isDead && isLastBlock) ? gameSpeed : 0.02;\n                block.vanishTimer += deltaTime * speed;\n                if (!isLastBlock && (block.vanishTimer > 10)) {\n                    this.waitingBlocks.splice(blockIndex, 1);\n                }\n            }\n\n            let helperCanvas = window.game.helperCtx.canvas;\n            let helperCtx = window.game.helperCtx;\n\n            if (block.blocks.length <= 0) continue;\n\n            const lastDrawPos = isLastBlock ? this.drawPosition : null;\n\n            if (block.vanishTimer > 0 && false) {\n                continue;\n                console.log(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\")\n                window.gameEngine.camTransform(helperCtx, true);\n\n\n                this.drawWaitingBlockInCTX([\n                    {ctx: helperCtx, color: this.colorDarker, offset: 5},\n                    {ctx: helperCtx, color: this.colorBrighter, offset: 4},\n                ], block.blocks, lastDrawPos);\n\n\n                helperCtx.globalCompositeOperation = 'destination-out';\n\n                ctx.restore();\n                helperCtx.restore();\n\n                ctx.drawImage(helperCanvas, 0, 0);\n\n                helperCtx.fillStyle = '#c7c7c7';\n                helperCtx.globalCompositeOperation = \"source-in\";\n                helperCtx.fillRect(0, 0, helperCanvas.width, helperCanvas.height);\n                window.gameEngine.camTransform(ctx);\n\n            } else if (block.vanishTimer < 10) {\n                this.drawWaitingBlockInCTX([\n                    {ctx: ctx, color: this.colorDarker, offset: 6},\n                    {ctx: ctx, color: this.colorBrighter, offset: 4},\n                ], block.blocks, lastDrawPos);\n            }\n\n\n        }\n\n\n    }\n\n    drawWaitingBlockInCTX(callback, blocks, lastPosition) {\n        if (blocks.length <= 0) return;\n\n\n        for (let ctxIndex = 0; ctxIndex < callback.length; ctxIndex++) {\n            let b = callback[ctxIndex];\n            let ctx = b.ctx;\n            let offset = b.offset;\n            ctx.lineCap = \"round\";\n            ctx.lineJoin = \"round\";\n            ctx.lineWidth = 6;\n            ctx.strokeStyle = b.color;\n            ctx.beginPath();\n            ctx.moveTo(blocks[0].x * 10 + offset, blocks[0].y * 10 + offset);\n            for (let i = 1; i < blocks.length; i++) {\n                ctx.lineTo(blocks[i].x * 10 + offset, blocks[i].y * 10 + offset);\n            }\n            if (lastPosition !== null) {\n                ctx.lineTo(lastPosition.x * 10 + offset, lastPosition.y * 10 + offset);\n            }\n            ctx.stroke();\n        }\n    }\n\n    draw(ctx) {\n        if (!this.isReady) return;\n        if (!this.hasReceivedPosition) return;\n        const gameSpeed = window.game.gameSpeed;\n        let offset = window.gameEngine.deltaTime * gameSpeed;\n\n        if (this.moveRelativeToServerPosNextFrame) {\n            // When Receiving Player State\n            // Next Frame Move Relative To Server Pos\n            offset = (Date.now() - this.lastServerPosSentTime) * gameSpeed;\n            this.moveRelativeToServerPosNextFrame = false;\n        }\n\n        if (this.isMyPlayer) {\n            this.serverPos = Player.movePlayer(this.serverPos, this.serverDir, offset);\n            if (this.serverDir === this.dir) {\n                let clientSideDist = 0;\n                if (Player.isMovingHorizontally(this.dir)) {\n                    if (this.position.y === this.serverPos.y) {\n                        if (this.dir === 'right') {\n                            clientSideDist = this.position.x - this.serverPos.x;\n                        } else {\n                            clientSideDist = this.serverPos.x - this.position.x;\n                        }\n                    }\n                } else {\n                    if (this.position.x === this.serverPos.x) {\n                        if (this.dir === 'down') {\n                            clientSideDist = this.position.y - this.serverPos.y;\n                        } else {\n                            clientSideDist = this.serverPos.y - this.position.y;\n                        }\n                    }\n                }\n                clientSideDist = Math.max(0, clientSideDist);\n                offset *= GameMath.linearInterpolate(.5, 1, GameMath.inverseLinearInterpolate(5, 0, clientSideDist));\n            }\n        }\n        let offsetPosition = Player.movePlayer(this.position, this.dir, offset);\n        if (!this.positionInWalls(offsetPosition))\n            this.updatePlayerPosition(offsetPosition);\n\n\n        this.moveDrawPosToPos();\n        this.checkNextDirAndCamera();\n        this.drawWaitingBlocks(ctx);\n        this.drawPlayerHeadWithEye(ctx);\n        this.parseDirQueue();\n\n    }\n\n\n    checkIfPositionSentEarlier(pos) {\n        return false; // TODO: Fix This\n        // console.log(pos, this.lastChangedDirPos, \"E\");\n\n\n        if (this.dir === 'up' && pos.y >= this.lastChangedDirPos.y) return true;\n        else if (this.dir === 'down' && pos.y <= this.lastChangedDirPos.y) return true;\n        else if (this.dir === 'left' && pos.x >= this.lastChangedDirPos.x) return true;\n        else return this.dir === 'right' && pos.x <= this.lastChangedDirPos.x;\n    }\n\n\n    positionInWalls(pos) {\n        const mapSize = window.gameEngine.gameObjects.mapSize - 1;\n        const playerPositionFloored = pos.floorVector();\n        const playerPositionCelled = pos.ceilVector();\n        const minBoundary = new Point(0, 0);\n        const maxBoundary = new Point(mapSize, mapSize);\n\n        return (playerPositionFloored.x <= minBoundary.x ||\n            playerPositionCelled.x >= maxBoundary.x ||\n            playerPositionFloored.y <= minBoundary.y ||\n            playerPositionCelled.y >= maxBoundary.y)\n    }\n\n    requestChangeDir(value, skipQueue = false) {\n        const dir = Player.mapControlsToDir(value);\n        const gameSpeed = window.game.gameSpeed;\n        const timePassedFromLastSend = Date.now() - this.lastDirServerSentTime;\n        const minTimeToWaitToSendDir = 0.7 / gameSpeed;\n\n        if (true) {\n            //check Player Socket Connection\n        }\n\n\n        // Prevent Sending Same Dir\n        // Prevent Sending Dir Too Fast\n        if (dir === this.myLastSendDir && timePassedFromLastSend < minTimeToWaitToSendDir) {\n            console.log(\"dir === this.myLastSendDir || timePassedFromLastSend < minTimeToWaitToSendDir\")\n            return false;\n        }\n        this.myLastSendDir = dir;\n        this.lastDirServerSentTime = Date.now();\n\n        if (this.dir === dir) {\n            console.log(\"this.dir === dir\");\n            this.addDirToQueue(dir, skipQueue);\n            return false;\n        }\n\n        // Check If Dir Is Opposite Of Current Dir\n        if (GameUtils.isOppositeDir(dir, this.dir)) {\n            console.log(\"GameUtils.isOppositeDir(dir, this.dir)\");\n            this.addDirToQueue(dir, skipQueue);\n            return false;\n        }\n\n        // Round Player Position To The Nearest Integer\n        const isHorizontal = !this.isMovingHorizontally(this.dir);\n        const valueToRound = isHorizontal ? this.position.y : this.position.x;\n        const roundedValue = Math.round(valueToRound);\n        const newPlayerPos = this.position.clone();\n        if (isHorizontal) newPlayerPos.y = roundedValue; else newPlayerPos.x = roundedValue;\n        // console.log(\"LastPos\", this.position, \"NewPos\", newPlayerPos);\n\n        // Check If Position Corrupted Since Last Send\n        if (this.checkIfPositionSentEarlier(newPlayerPos)) {\n            console.log(\"GameUtils.checkIfPositionSentEarlier(dir, this.dir)\");\n            this.addDirToQueue(dir, skipQueue);\n            return false;\n        }\n\n\n        console.log(\"Position Passed\")\n        // Check If Last Direction Complete passed .55 Of Current Block\n        let changeDirNow = false;\n\n        const blockProgress = valueToRound - Math.floor(valueToRound);\n        if (GameUtils.isMovingToPositiveDir(dir)) {\n            if (blockProgress < .45) changeDirNow = true;\n        } else if (blockProgress > .55) changeDirNow = true;\n\n\n        // Check If Prediction Of Next Direction Will Touch Wall\n        // We Change It Now Not in Next Frame\n        // Because checkNextDirAndCamera function will not change the direction\n        // Because the player is not moving to the next block\n        // as it prevented from move in main update function\n        let predictionVector = this.position.clone();\n        predictionVector = Player.movePlayer(predictionVector, this.dir, 1);\n        if (this.positionInWalls(predictionVector))\n            changeDirNow = true;\n\n\n        if (changeDirNow) {\n            console.log(\"changeDirNow\");\n            this.changeCurrentDir(dir, newPlayerPos);\n        } else {\n            console.log(\"Change It Next Frame\");\n            this.myNextDir = dir;\n            this.changeDirAtCoord = roundedValue;\n            this.changeDirAtIsHorizontal = isHorizontal;\n            this.lastChangedDirPos = newPlayerPos.clone();\n        }\n\n\n        // Last Send Time\n        // Last Confirmed Time\n        this.lastMyPostSetClientSendTime = Date.now();\n        if (this.lastPosHasBeenConfirmed) {\n            this.lastConfirmedTimeForPos = Date.now();\n            this.lastPosHasBeenConfirmed = false;\n        }\n\n\n        // We Send The Position and Dir To Server\n        // To Make Server Sync With Client\n        const packet = new DirectionPacket(dir, newPlayerPos);\n        window.client.send(packet);\n        return true;\n    }\n\n\n    parseDirQueue() {\n\n        if (this.sendDirQueue.length <= 0) return;\n        const firstDir = this.sendDirQueue.first;\n        const timePassed = Date.now() - firstDir.time;\n        const gameSpeed = window.game.gameSpeed;\n        const minTimeToWaitToSendDir = 1.2 / gameSpeed;\n        if (timePassed < minTimeToWaitToSendDir || this.requestChangeDir(firstDir.dir, true)) {\n            this.sendDirQueue.shift();\n        }\n    }\n\n    addDirToQueue(dir, skip = false) {\n        if (!skip && this.sendDirQueue.length < 3) {\n            this.sendDirQueue.push({\n                dir: dir, time: Date.now()\n            });\n        }\n    }\n\n    /**\n     * Request Waiting Blocks For Two Reasons\n     * 1- If server thinks player movement then some waiting blocks were missed so we request it\n     */\n    requestWaitingBlocks() {\n        this.isGettingWaitingBlocks = true;\n        this.waitingPushedDuringReceiving = [];\n        const packet = new RequestWaitingBlockPacket();\n        window.client.send(packet);\n    }\n\n\n    drawPlayerHead(ctx) {\n        let newDrawPos = new Point(this.drawPosition.x * 10 + 4.5, this.drawPosition.y * 10 + 4.5);\n        let radius = 6;\n        let shadowOffset = .3;\n\n        const gradient = ctx.createRadialGradient(newDrawPos.x - 3, newDrawPos.y - 3, 0, newDrawPos.x, newDrawPos.y, radius);\n        gradient.addColorStop(0, this.colorSlightlyBrighter);\n        gradient.addColorStop(1, this.colorBrighter);\n        if (false) {\n\n        } else {\n            ctx.fillStyle = this.colorDarker;\n            ctx.beginPath();\n            ctx.arc(newDrawPos.x + shadowOffset, newDrawPos.y + shadowOffset, radius, 0, Math.PI * 2, false);\n            ctx.fill();\n            ctx.fillStyle = gradient;\n            ctx.beginPath();\n            ctx.arc(newDrawPos.x - shadowOffset, newDrawPos.y - shadowOffset, radius, 0, Math.PI * 2, false);\n            ctx.fill();\n            if (this.isMyPlayer) {\n                ctx.fillStyle = \"#ffffff\";\n                ctx.beginPath();\n                ctx.arc(newDrawPos.x - shadowOffset, newDrawPos.y - shadowOffset, 1, 0, Math.PI * 2, false);\n                ctx.fill();\n            }\n        }\n    }\n}\n\n\nexport default Player;","class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    equals(otherPoint) {\n        return this.x === otherPoint.x && this.y === otherPoint.y;\n    }\n\n    distanceVector(otherPoint) {\n        return new Point(Math.abs(this.x - otherPoint.x), Math.abs(this.y - otherPoint.y));\n    }\n\n    clone() {\n        return new Point(this.x, this.y);\n    }\n\n\n    floorVector()\n    {\n        return new Point(Math.floor(this.x),Math.floor(this.y));\n    }\n\n    ceilVector()\n    {\n        return new Point(Math.ceil(this.x),Math.ceil(this.y));\n    }\n}\n\nexport default Point;","import Point from './point.js';\nclass Rectangle {\n    constructor(minVec, maxVec) {\n        this.min = minVec;\n        this.max = maxVec;\n    }\n\n    toString() {\n        return `<Rectangle min=${this.min} max=${this.max}>`;\n    }\n\n    clamp(rect) {\n        const minVec = new Point(\n            Math.max(this.min.x, rect.min.x),\n            Math.max(this.min.y, rect.min.y)\n        );\n\n        const maxVec = new Point(\n            Math.min(this.max.x, rect.max.x),\n            Math.min(this.max.y, rect.max.y)\n        );\n\n        return new Rectangle(minVec, maxVec);\n    }\n\n    *for_each() {\n        for (let x = this.min.x; x < this.max.x; x++) {\n            for (let y = this.min.y; y < this.max.y; y++) {\n                yield { x, y };\n            }\n        }\n    }\n\n    isRectOverlap(rect) {\n        return (\n            this.min.x < rect.max.x &&\n            this.max.x > rect.min.x &&\n            this.min.y < rect.max.y &&\n            this.max.y > rect.min.y\n        );\n    }\n\n    isNotRectOverlap(rect) {\n        return (\n            this.max.x < rect.min.x ||\n            this.min.x > rect.max.x ||\n            this.max.y < rect.min.y ||\n            this.min.y > rect.max.y\n        );\n    }\n\n\n    pointInRect(point) {\n        return (\n            point.x >= this.min.x &&\n            point.x <= this.max.x &&\n            point.y >= this.min.y &&\n            point.y <= this.max.y\n        );\n    }\n}\n\nexport default Rectangle;","const getHeight = () => window.innerHeight;\nconst getWidth = () => window.innerWidth;\n\nconst calculate_pixel_ratio = () => {\n    let context = document.createElement(\"canvas\").getContext(\"2d\");\n    let dpr = window.devicePixelRatio || 1;\n    let bsr = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n    return dpr / bsr;\n}\n\nconst ease = {\n    in: function (t) {\n        return t * t * t * t;\n    },\n    out: function (t) {\n        return 1 - Math.pow(1 - t, 4);\n    },\n    inout: function (t) {\n        return t < 0.5 ? 8 * t * t * t * t : 1 - Math.pow(-2 * t + 2, 4) / 2;\n    },\n};\n\n\nconst drawInCtxRec = (ctx, point, size, color, spacing = 0) => {\n    ctx.fillStyle = color;\n    ctx.fillRect(point.x + spacing, point.y + spacing, size, size);\n}\n\n\nconst convertIntColorToHex = (color) => {\n    return \"#\" + (\"000000\" + color.toString(16)).slice(-6);\n}\n\n\nconst isOppositeDir = (newDir, OldDir) => {\n    if (newDir === 'up' && OldDir === 'down')\n        return true;\n    else if (newDir === 'down' && OldDir === 'up')\n        return true;\n    else if (newDir === 'left' && OldDir === 'right')\n        return true;\n    else return newDir === 'right' && OldDir === 'left';\n\n}\n\nconst isVerticalDir = (dir) => {\n    return dir === 'up' || dir === 'down';\n}\n\nconst isMovingToPositiveDir = (dir) => {\n    return dir === 'down' || dir === 'right';\n\n}\n\nexport {isMovingToPositiveDir,isVerticalDir,isOppositeDir, convertIntColorToHex, getHeight, getWidth, calculate_pixel_ratio, ease, drawInCtxRec}","const linearInterpolate = (a, b, v) => {\n    return a + (b - a) * v;\n}\n\n\nconst inverseLinearInterpolate = (a, b, v) => {\n    return (v - a) / (b - a);\n}\n\nconst adaptedLinearInterpolate = (a, b, val1, val2) => {\n    let x = 1 - Math.pow((1 - val1), val2);\n    return linearInterpolate(a, b, x);\n};\n\nconst adaptedConLinearInterpolate = (val2) => (a, b, val1) => {\n    return adaptedLinearInterpolate(a, b, val1, val2);\n}\n\nconst smoothLimit = (v) => {\n    let negative = v < 0;\n    if (negative) {\n        v *= -1;\n    }\n    v = 1 - Math.pow(2, -v);\n    if (negative) {\n        v *= -1;\n    }\n    return v;\n}\n\nconst clamp = (val, min, max) => {\n    return Math.max(min, Math.min(max, val));\n}\n\n\nconst calPercentage = (a, percentage) => a * percentage;\n\nexport {\n    linearInterpolate, inverseLinearInterpolate, adaptedLinearInterpolate, adaptedConLinearInterpolate\n    , clamp , smoothLimit,calPercentage\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Camera from './ui/objects/camera.js';\nimport GameEngine from \"./gameEngine\";\nimport {Client} from \"./network/client\";\nimport \"./globals.js\";\nimport \"./controls.js\";\nimport  \"./extensions/arraysExtensions.js\";\n\nconst camera = new Camera();\nconst gameEngine = new GameEngine(60);\n\nlet canvas = document.getElementById(\"canvas\");\nlet ctx = canvas.getContext(\"2d\");\nlet blocks = gameEngine.gameObjects.blocks;\nlet players = gameEngine.gameObjects.players;\n\nlet helperCanvas = document.createElement(\"canvas\");\nlet helperCtx = helperCanvas.getContext(\"2d\");\n\nwindow.game.helperCtx = helperCtx;\nwindow.gameEngine = gameEngine;\nwindow.camera = camera;\nwindow.game.canvas = canvas;\n\nlet client = null;\nlet myPlayer = null;\n\nconst draw = () => {\n    if (client && client.player) myPlayer = client.player;\n\n    gameEngine.scaleCanvas(ctx);\n    ctx.fillStyle = \"#3a3428\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    camera.loop()\n    gameEngine.camTransform(ctx);\n\n\n    console.log(\"Blocks: \" + blocks.length);\n    for (let b of blocks) {\n        b.draw(ctx, false);\n    }\n\n    for (let p in players) {\n        players[p].draw(ctx);\n    }\n\n    if (client && client.player) myPlayer.removeBlocksOutsideCamera();\n\n}\n\n\ngameEngine.setDrawFunction(draw);\n\n\nwindow.requestAnimationFrame(gameEngine.loop.bind(gameEngine));\n\nclient = new Client('ws://127.0.0.1:5000/game', (client) => {\n    client.setPlayerName(\"Test\");\n});\n\n\n"],"names":["keyMapper","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","window","onkeyup","e","keyVal","key","client","player","requestChangeDir","Object","defineProperty","Array","prototype","get","length","Error","GameMath","GameUtils","calculate_pixel_ratio","GameObjects","PingPacket","GameEngine","fps","_classCallCheck","lastFrameTimeStamp","currentFrameTimeStamp","totalDeltaTimeCap","deltaTime","interpoatedDeltaTime","timesCap","currentCapIndex","processFrames","missedFrames","canvanQaulity","gameObjects","drawFunction","_createClass","value","setDrawFunction","getCap","cap","clamp","checkIncreasingInFramesProcess","linearInterpolate","push","Date","now","splice","checkDecreaseInFramesProcess","handleServerTiming","timeStamp","myPlayer","maxWaitTimeForDisconnect","game","maxWaitingSocketTime","clientSideSetPosPassedTime","lastMyPostSetClientSendTime","lastConfirmationPassedTime","lastConfirmedTimeForPos","serverSideSetPosPassed","lastPosServerSentTime","timeTookToConfirmation","console","log","maxPingTime","waitingForPing","pingPassedTime","lastPingTime","pingPacket","send","loop","requestAnimationFrame","bind","camTransform","ctx","changeSize","arguments","undefined","scaleCanvas","save","camera","calZoom","w","getWidth","h","getHeight","MAX_PIXEL_RATIO","drawingQuality","c","canvas","width","height","styleRatio","style","Block","players","blocks","mapSize","addPlayer","id","isMyPlayer","isReady","removePlayer","addBlock","block","getBlockAt","position","Point","globals","gameSpeed","viewPortRadius","maxZoom","maxBlocksNumber","usernameLength","drawingOffset","calDrawingOffset","p","x","y","calBlocksGap","size","entries","forEach","_ref","_ref2","_slicedToArray","Socket","Reader","PacketsDictionary","NamePacket","ConnectionStatus","CONNECTING","OPEN","CLOSING","CLOSED","PlayerStatus","WAITING","CONNECTED","READY","PLAYING","DISCONNECTED","Client","server","onConnect","ws","iniSocket","connectionStatus","playerStatus","username","packet","constructor","name","onReceive","messageEvent","_typeof","data","packetHandler","onOpen","onOpenEvent","onClose","onCloseEvent","Uint8Array","reader","packetSize","readInt2","packetId","packetClass","parsePacketData","handleReceivedPacket","setPlayerName","Writer","Packet","setPacketData","toHexString","parsePacket","finalize","Player","convertIntColorToHex","DirectionPacket","_Packet","direction","_this","_callSuper","dir","_inherits","writer","writeStringInBytes","writeIntInBytes","Rectangle","FillAreaPacket","rectangle","colorBrighter","colorDarker","colorSlightlyBrighter","colorPattern","colorPatternEdge","playerId","readInt4","colorsWithId","brighter","darker","slightlyBrighter","pattern","patternEdge","convertRectToBlock","gameEngine","Ready","isVerified","userId","nameLength","readStringFromBytes","readInt1","PlayerStatePacket","WaitingBlocksPacket","PongPacket","RequestWaitingBlockPacket","PlayerRemovedPacket","StopDrawingWaitingBlocksPacket","playerName","readString","playerX","playerY","hasReceivedPosition","moveRelativeToServerPosNextFrame","lastServerPosSentTime","lastPosHasBeenConfirmed","offset","calMoveOffset","newPos","newPosOffset","clone","newDir","movePlayer","serverSyncedWithClient","checkClientMovementSyncedWithServer","changeCurrentDir","requestWaitingBlocks","sendDirQueue","serverPos","serverDir","removeBlocksOutsideCamera","updatePlayerDirection","addWaitingBlocks","drawPosSet","drawPosition","ping","currentPingDiff","Math","abs","severLastPing","serverPingDiff","max","serverAvgPing","lastBlock","vec","playerList","waitingBlocks","playerWaitingBlocks","getLast","isGettingWaitingBlocks","skipGettingWaitingBlocksRespose","vanishTimer","blocksCount","i","replaceStack","waitingPushedDuringReceiving","_toConsumableArray","WebSocket","binaryType","onopen","onmessage","onclose","intToBytes","byteorder","signed","numBytes","littleEndian","bytes","view","DataView","buffer","shift","setUint8","bytesToInt","getUint8","signBit","from","map","byte","toString","padStart","join","readIntFromBytes","bytesNumber","slice","stringLength","TextDecoder","decode","readInt8","readInt16","readInt32","setPacketId","updatePacketSize","currentOffset","b","set","number","ensureCapacity","string","TextEncoder","encode","requiredSize","newSize","newData","currentBlock","nextBlock","animDirection","animProgress","animDelay","lastSetTime","setBlockId","delay","isCurrentBlock","isNextBlock","handleAnimation","drawBorderBlock","color","fillStyle","newP","fillRect","drawEmptyBlock","darkColor","brightColor","sizeFactor","newS","spacingTwenty","calPercentage","spacingTen","spacingNinty","drawInCtxRec","beginPath","moveTo","lineTo","fill","drawRegularBlock","bcolor","dcolor","draw","checkViewport","checkObjectInCamera","canDraw","_iterator","_createForOfIteratorHelper","_step","s","n","done","equals","err","f","rect","listOfBlocks","min","round","_iterator2","for_each","_step2","_step2$value","random","Camera","zoom","camPosition","camRotationOffset","camPositionOffset","camPrevPosition","camPosSet","camShakeBuffer","point","shakeCamera","rotate","shakeCameraDirection","amount","calCameraOffset","shake","shakeTime","shakeTime2","shakeTime3","ease","out","inout","inverseLinearInterpolate","cos","limit","smoothLimit","maxPixelRatio","quality","maxDimension","zoomEdge","screenPixels","blockPixels","zoomBlocks","sqrt","translate","scaleFactor","scale","moveToPlayer","getViewPortRec","pos","leftSide","rightSide","deathWasCertain","didUncertainDeathLastTick","isDeathTimer","uncertainDeathPosition","deadAnimParts","deadAnimPartsRandDist","hitLines","serverPosition","lastChangedDirPos","isDead","waitingBlocksDuringWaiting","myNextDir","myLastSendDir","lastDirServerSentTime","clientSideMoves","changeDirAtCoord","changeDirAtIsHorizontal","serverDiffPing","distVector","distanceVector","lastClientSideMove","moveDrawPosToPos","target","isMovingHorizontally","updatePlayerPosition","playerRect","pointInRect","checkNextDirAndCamera","isHorizontal","changeDirNow","currentCoord","isMovingToPositiveDir","tooFar","offsetPosition","clientDecision","time","drawPlayerHeadWithEye","newDrawPos","bigEye","smallEye","radius","animationSpeed","eyeAnimation","sin","r","gradient","createRadialGradient","addColorStop","PI","arc","lineWidth","stroke","restore","drawWaitingBlocks","blockIndex","isLastBlock","speed","helperCanvas","helperCtx","lastDrawPos","drawWaitingBlockInCTX","globalCompositeOperation","drawImage","callback","lastPosition","ctxIndex","lineCap","lineJoin","strokeStyle","clientSideDist","positionInWalls","parseDirQueue","checkIfPositionSentEarlier","playerPositionFloored","floorVector","playerPositionCelled","ceilVector","minBoundary","maxBoundary","skipQueue","mapControlsToDir","timePassedFromLastSend","minTimeToWaitToSendDir","addDirToQueue","isOppositeDir","valueToRound","roundedValue","newPlayerPos","blockProgress","floor","predictionVector","firstDir","first","timePassed","skip","drawPlayerHead","shadowOffset","getPlayerById","workingPos","controls","otherPoint","ceil","_regeneratorRuntime","t","hasOwnProperty","o","Symbol","a","iterator","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","l","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","_catch","delegateYield","_defineProperties","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","minVec","maxVec","concat","for_each$","_context","isRectOverlap","isNotRectOverlap","innerHeight","innerWidth","context","document","createElement","getContext","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","in","pow","spacing","OldDir","isVerticalDir","adaptedLinearInterpolate","val1","val2","adaptedConLinearInterpolate","negative","val","percentage","getElementById"],"sourceRoot":""}